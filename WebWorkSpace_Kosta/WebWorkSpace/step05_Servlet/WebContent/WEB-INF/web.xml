<?xml version="1.0" encoding="UTF-8"?>
<!-- <web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
 -->  
 
 <web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" id="WebApp_ID" version="4.0">
 
 
 <display-name>step05_Servlet</display-name>
  <welcome-file-list>
    <welcome-file>test.jsp</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- servlet 등록하기 
  lifeCycle =  new LifeCycleServlet(); 
   *load-on-startup는 서블릿을 생성하는 시점을 설정하는 것으로
    load-on-startup을 설정하면 server가 start될 때 객체를 미리 생성한다 

  
  -->
  <servlet>
  <servlet-name>lifeCycle</servlet-name>
  <servlet-class>ex1020.servlet.LifeCycleServlet</servlet-class>
  <load-on-startup>1</load-on-startup>
  </servlet>
  
  
    <servlet>
  <servlet-name>loginForm</servlet-name>
  <servlet-class>ex1020.servlet.LoginServlet</servlet-class>
  <load-on-startup>2</load-on-startup>
  </servlet>
  
    <servlet>
  <servlet-name>loginOutForm</servlet-name>
  <servlet-class>ex1020.servlet.logoutServlet</servlet-class>
  <load-on-startup>3</load-on-startup>
  </servlet>
  
  
  <!-- 브라우저에서 ~라고 요청했을 때 어떤 서블릿을 실행해야하는지 설정 
  	servlet-name은 servlet 등록 네임과 같아야 함
    실행되면 service 함수 호출 .. 
  -->
  <servlet-mapping>
  <servlet-name>lifeCycle</servlet-name>
  <url-pattern>/life</url-pattern>
  </servlet-mapping>
  
    <servlet-mapping>
  <servlet-name>loginForm</servlet-name>
  <url-pattern>/login</url-pattern>
  </servlet-mapping>
  
     <servlet-mapping>
  <servlet-name>loginOutForm</servlet-name>
  <url-pattern>/logout</url-pattern>
  </servlet-mapping>
  
  
</web-app>