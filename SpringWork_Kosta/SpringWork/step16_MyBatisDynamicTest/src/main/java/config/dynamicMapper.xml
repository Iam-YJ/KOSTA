<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dynamicMapper">

	<sql id="proSelectSql">
		select code, name, qty, price, detail from
		productList
	</sql>



<resultMap type="product" id="proMap">
	<id column="code" property="code"/> <!-- id는 primary key를 설정할 때. column은 db의 명 property는 자바의 명 -->
	<result column="name" property="name"/>
	<result column="qty" property="qty"/>
	<result column="price" property="price"/>
	<result column="detail" property="detail"/>
</resultMap>


	
	<!-- [2]. ex) select * from productList
	 ex) select * from productList where 검색필드 like 검색단어
	 ex) select *from productList order by 정렬대상
	 ex) select * from productList where 검색필드 like 검색단어 order by 정렬대상
	 -->


 <select id="ifSelect" parameterType="product" resultMap="proMap">
	   <include refid="proSelectSql"/>
	 	<trim prefix="where">
	 	  <if test="name != null"> 
	   		 name=#{name}
	   		 <!-- like '%' || upper(어쩌구) || '%' -->
	   	  </if>
	   	</trim>
		   	<if test="price > 0 ">
		  	 order by #{price}
		   	</if>
   </select>
   
   
   <!-- [3].  parameter 정보에 따라 레코드 수정한다.
	        상품코드에 해당하는 상품의 
	        상품이름, 상품수량, 상품가격, 상품상세정보를 수정하데
	         parameter 의 정보가 있는 데이터만 수정한다.
 -->

<update id="update" parameterType="product">
	update productList
	<set>
	 <if test ="name != null">
	 	name = #{name},
	 </if>
	 <if test ="price > 0">
	 	price = #{price},
	 </if>
	 <if test ="detail != null">
	 	detail = #{detail},
	 </if>
	
	</set>
	where code=#{code}
</update>

<!-- [4] 상품코드에 해당하는 레코드 삭제 -->
<delete id="delete" parameterType="product">
	delete from productList 
	<trim prefix="where">
	<if test="code != null">
		code=#{code}
	</if>
	</trim>
</delete>

<!-- [5]. 모든 상품의 개수를 출력한다.
select sum(qty) from productList - 모든상품의 qty의총합계
 -->
 
 <select id="sum" resultType="int">
 select
 sum(qty)
  from productList
 </select>
 
 <!-- [6]. parameter의 상품코드에 해당하는 레코드 검색
	    ex)select * from productList where in 상품코드 in (?,?,...) -->

	  <select id="forSelect" parameterType="list" resultMap="proMap">
	  	select * from productList
     		<where>
     			code in
	     		<foreach collection="list" item="item" separator="," open="(" close=")">
	     			#{item}
	     		</foreach>
     		</where>
     </select>
 


</mapper>