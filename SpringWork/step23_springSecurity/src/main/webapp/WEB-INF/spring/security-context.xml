<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd">


	<!-- 클라이언트 요청을 가로챌 정보를 설정 
	auto-config="true" spring security의 기본 설정을 그대로 따라가겠다 
		use-expression="true" 는 spring의 SpEL을 사용함 -->
		

	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/user.kosta" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/admin.kosta" access="hasRole('ROLE_ADMIN')" />
	</security:http>

	<!-- spring security가 제공하는 in-memory 기능 설정 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user" password="{noop}1234" authorities="ROLE_USER" />
				<security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN,ROLE_USER" /> <!-- authorities는 권한을 부여하는 것  -->
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>


</beans>
